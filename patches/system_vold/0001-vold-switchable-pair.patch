From 1c8bf48406bd7950132d8940e073570524b5e452 Mon Sep 17 00:00:00 2001
From: luca020400 <luca.stefani.ge1@gmail.com>
Date: Sat, 15 Nov 2014 11:19:45 +0100
Subject: [PATCH 1/1] Allow pre-configured device pairs to switch

---
 DirectVolume.cpp | 38 ++++++++++++++++++++++++++++++++++++++
 DirectVolume.h   |  4 ++--
 2 files changed, 40 insertions(+), 2 deletions(-)

diff --git a/DirectVolume.cpp b/DirectVolume.cpp
index a869460..8c69bc9 100644
--- a/DirectVolume.cpp
+++ b/DirectVolume.cpp
@@ -25,6 +25,7 @@
 #define LOG_TAG "DirectVolume"
 
 #include <cutils/log.h>
+#include <cutils/properties.h>
 #include <sysutils/NetlinkEvent.h>
 
 #include "DirectVolume.h"
@@ -72,6 +73,7 @@ bool PathInfo::match(const char *path)
 
 DirectVolume::DirectVolume(VolumeManager *vm, const fstab_rec* rec, int flags) :
         Volume(vm, rec, flags) {
+    char switchable[PROPERTY_VALUE_MAX];
     mPaths = new PathCollection();
     for (int i = 0; i < MAX_PARTITIONS; i++)
         mPartMinors[i] = -1;
@@ -100,6 +102,42 @@ DirectVolume::DirectVolume(VolumeManager *vm, const fstab_rec* rec, int flags) :
     mFuseMountpoint = strdup(mount);
 #endif
 
+    property_get("persist.sys.vold.switchexternal", switchable, "0");
+    if (!strcmp(switchable,"1")) {
+        char *first, *second = NULL;
+        char label[PATH_MAX];
+        const char *delim = ",";
+        int lblidx = strlen(Volume::FUSE_DIR) + 1;
+        bool swap = true;
+
+        property_get("persist.sys.vold.switchablepair", switchable, "");
+
+        if (!(first = strtok(switchable, delim))) {
+            SLOGE("Mount switch requested, but no switchable mountpoints found");
+            swap = false;
+        } else if (!(second = strtok(NULL, delim))) {
+            SLOGE("Mount switch requested, but bad switchable mountpoints found");
+            swap = false;
+        }
+
+        if (swap) {
+            free(mMountpoint);
+            free(mFuseMountpoint);
+
+            if (!strcmp(mount,first)) {
+                mFuseMountpoint = strdup(second);
+                strcpy(label, second+lblidx);
+                snprintf(second, PATH_MAX, "%s/%s", Volume::MEDIA_DIR, label);
+                mMountpoint = strdup(second);
+            } else if (!strcmp(mount,second)) {
+                mFuseMountpoint = strdup(first);
+                strcpy(label, first+lblidx);
+                snprintf(first, PATH_MAX, "%s/%s", Volume::MEDIA_DIR, label);
+                mMountpoint = strdup(first);
+            }
+        }
+    }
+
     setState(Volume::State_NoMedia);
 }
 
diff --git a/DirectVolume.h b/DirectVolume.h
index 7ab06c0..5ff575b 100644
--- a/DirectVolume.h
+++ b/DirectVolume.h
@@ -43,8 +43,8 @@ class DirectVolume : public Volume {
 public:
     static const int MAX_PARTITIONS = VOLD_MAX_PARTITIONS;
 protected:
-    const char* mMountpoint;
-    const char* mFuseMountpoint;
+    char* mMountpoint;
+    char* mFuseMountpoint;
 
     PathCollection *mPaths;
     int            mDiskMajor;
-- 
1.9.1
